stages: # List of stages for jobs, and their order of execution
  - test
  - build
  - deploy

test-job:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'staging' || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'production')
  script:
    - echo 'Testing'

build-job: # This job runs in the build stage, which runs first.
  stage: build
  image: docker:latest
  when: on_success
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: "docker:dind"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'production'
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t gitlab.informatika.org:4567/k-01-11/graduit-fe .
    - docker push gitlab.informatika.org:4567/k-01-11/graduit-fe

deploy-job:
  stage: deploy
  image: docker:latest
  when: on_success
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: "docker:dind"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'production'
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - python3 -m venv awscli-env
    - source awscli-env/bin/activate
    - pip install awscli
    - aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - aws --version
    - docker info
    - docker --version
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - docker pull gitlab.informatika.org:4567/k-01-11/graduit-fe:latest
    - docker tag gitlab.informatika.org:4567/k-01-11/graduit-fe:latest $DOCKER_REGISTRY/graduit-fe:latest
    - docker push $DOCKER_REGISTRY/graduit-fe:latest
